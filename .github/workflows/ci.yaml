name: ci-test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


env:
  # Slack Webhook "Deployments"
  # settings are in https://quotersoftware.slack.com/services/3061599386935
  DEPLOYMENTS_SLACK_WEBHOOK: 'https://hooks.slack.com/services/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'

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: harbour
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
          which migrate

      - name: Run migrations
        run: make migrateup

      - name: Test
        run: make test


  integration-test:
    name: Postman Tests
    runs-on: ubuntu-latest
    steps: 
      - name: Install Node on runner
        uses: actions/setup-node@v1
        with:
          node-version: "14"

      # Install newman globally
      - name : Install newman
        run: |
          npm install -g newman
          npm install -g newman-reporter-slackreporter
          npm install -g newman-reporter-htmlextra
      
      # Create directory for result
      - name: Make directory for test result
        run: mkdir -p TestResults

      -  name: change dir before List directory
         run: cd ..

      # List directory 
      - name:  List directory
        run: | 
            ls -lah 
        
  
      # Run Test 
      - name: Run Postman Collection
        run: |
          newman run "HarbourLivingGraphQL.postman_collection.json" \
          -e "HarbourLiving-Heroku.postman_environment.json" \
          -d "postman_data.csv" -r slackreporter, htmlextra \
          --reporter-htmlextra-export TestResults/report.html \
          --reporter-slackreporter-webhookurl ${{env.DEPLOYMENTS_SLACK_WEBHOOK}} > TestResults/report.html
          
      # Upload Report
      - name: Output Result 
        uses: actions/upload-artifact@v2
        with:
          name: Reports
          path: TestResults
